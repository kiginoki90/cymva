plugins {
    id "com.android.application"
    id "kotlin-android"
    id 'com.google.gms.google-services' // Firebaseプラグイン
    id "dev.flutter.flutter-gradle-plugin" // Flutterプラグイン
}

apply plugin: 'com.google.gms.google-services' // 追加

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    // key.propertiesが存在しない場合はプロパティを空に設定
    keystoreProperties.put('storeFile', '')
    keystoreProperties.put('storePassword', '')
    keystoreProperties.put('keyAlias', '')
    keystoreProperties.put('keyPassword', '')
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode", "1")
def flutterVersionName = localProperties.getProperty("flutter.versionName", "1.0")

def flutterCompileSdkVersion = localProperties.getProperty("flutter.compileSdkVersion", "35")
def flutterTargetSdkVersion = localProperties.getProperty("flutter.targetSdkVersion", "35")
def flutterMinSdkVersion = "23"

android {
    namespace = "com.kobayashi.cymva"
    compileSdkVersion 35
    compileSdk 35  // 数値で設定
    ndkVersion = localProperties.getProperty("flutter.ndkVersion") ?: "25.1.8937393"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11 // Java 11 に変更
        targetCompatibility JavaVersion.VERSION_11 // Java 11 に変更
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '11' // Kotlin のターゲットバージョンを Java と一致させる
    }

    defaultConfig {
        targetSdkVersion 35
        applicationId "com.kobayashi.cymva"
        minSdkVersion flutterMinSdkVersion.toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            // デバッグビルド用のデフォルト設定
        }
        release {
                // key.propertiesからの設定を使用
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dependencies {
        implementation 'com.google.android.gms:play-services-ads:22.1.0'
        implementation 'androidx.multidex:multidex:2.0.1'
        implementation platform('com.google.firebase:firebase-bom:32.2.0') // Firebase BOM
        implementation 'com.google.firebase:firebase-messaging' // Firebase Messaging
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    }
}

flutter {
    source = "../.." // 必要なら
}
